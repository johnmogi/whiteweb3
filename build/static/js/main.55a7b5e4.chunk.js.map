{"version":3,"sources":["main.js","serviceWorker.js","index.js"],"names":["API","Main","props","addContact","name","state","mail","phone","address","id","contacts","length","alert","setState","valid","senData","innerUpdate","fetch","method","headers","Accept","body","then","response","json","catch","err","message","push","setFormParams","event","nam","target","val","value","sortBy","key","ordered","sort","a","b","reverse","toUpperCase","className","Form","Group","controlId","Label","Control","type","placeholder","required","onChange","this","Text","Button","variant","onClick","Table","striped","bordered","hover","map","c","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.55a7b5e4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Form, Table } from \"react-bootstrap\";\nconst API = \"http://localhost:3000/api/contacts\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      id: null,\n      name: \"\",\n      mail: \"\",\n      phone: \"\",\n      address: \"\",\n      valid: false,\n      ordered: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(API)\n      .then((response) => response.json())\n      .then((contacts) => this.setState({ contacts }));\n  }\n\n  addContact = () => {\n    let name = this.state.name;\n    let mail = this.state.mail;\n    let phone = this.state.phone;\n    let address = this.state.address;\n    let id = this.state.contacts.length + 1;\n    if (!name || !mail || !phone || !address) {\n      alert(\"אחד מהשדות חסרים, בדקו שנית\");\n      return false;\n    }\n    if (mail.length < 6) {\n      return alert('כתובת הדוא\"ל קצרה מדי');\n    }\n    // this.state.valid = true;\n    this.setState({ valid: true });\n    const senData = `{\"id\":${id},\"name\":\"${name}\",\"mail\":\"${mail}\",\"phone\":\"${phone}\",\"address\":\"${address}\"}`;\n    const innerUpdate = {\n      id: `${id}`,\n      name: `${name}`,\n      mail: `${mail}`,\n      phone: `${phone}`,\n      address: `${address}`,\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: senData,\n    };\n    fetch(API, options)\n      .then((response) => response.json())\n      .then(() => alert(name + \" הרשומה עודכנה, תודה \"))\n      .catch((err) => alert(err.message));\n    // manual push into state:\n    let contacts = this.state.contacts;\n    contacts.push(innerUpdate);\n    this.setState({ contacts: contacts });\n  };\n\n  setFormParams = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  };\n\n  sortBy = (key) => {\n    let ordered = this.state.ordered;\n    let contacts = this.state.contacts;\n    // a bit complex code since key deosn't inherit value in inner scope object sort\n    switch (key) {\n      case (key = \"id\"):\n        if (!ordered) {\n          this.setState({ ordered: true });\n          contacts.sort(function (b, a) {\n            return a.id - b.id;\n          });\n        } else {\n          this.setState({ ordered: false });\n          contacts.sort(function (a, b) {\n            return a.id - b.id;\n          });\n        }\n        break;\n      case (key = \"name\"):\n        if (!ordered) {\n          this.setState({ ordered: true });\n          contacts.sort(function (a, b) {\n            a = a.name.toUpperCase();\n            b = b.name.toUpperCase();\n            return a < b ? -1 : a > b ? 1 : 0;\n          });\n          break;\n        } else {\n          this.setState({ ordered: false });\n          contacts.reverse(function (a, b) {\n            a = a.name.toUpperCase();\n            b = b.name.toUpperCase();\n            return a < b ? -1 : a > b ? 1 : 0;\n          });\n          break;\n        }\n        case (key = \"phone\"):\n          if (!ordered) {\n            this.setState({ ordered: true });\n            contacts.sort(function (a, b) {\n              a = a.phone.toUpperCase();\n              b = b.phone.toUpperCase();\n              return a < b ? -1 : a > b ? 1 : 0;\n            });\n            break;\n          } else {\n            this.setState({ ordered: false });\n            contacts.reverse(function (a, b) {\n              a = a.phone.toUpperCase();\n              b = b.phone.toUpperCase();\n              return a < b ? -1 : a > b ? 1 : 0;\n            });\n            break;\n          }\n          case (key = \"mail\"):\n            if (!ordered) {\n              this.setState({ ordered: true });\n              contacts.sort(function (a, b) {\n                a = a.mail.toUpperCase();\n                b = b.mail.toUpperCase();\n                return a < b ? -1 : a > b ? 1 : 0;\n              });\n              break;\n            } else {\n              this.setState({ ordered: false });\n              contacts.reverse(function (a, b) {\n                a = a.mail.toUpperCase();\n                b = b.mail.toUpperCase();\n                return a < b ? -1 : a > b ? 1 : 0;\n              });\n              break;\n            }\n            case (key = \"address\"):\n              if (!ordered) {\n                this.setState({ ordered: true });\n                contacts.sort(function (a, b) {\n                  a = a.address.toUpperCase();\n                  b = b.address.toUpperCase();\n                  return a < b ? -1 : a > b ? 1 : 0;\n                });\n                break;\n              } else {\n                this.setState({ ordered: false });\n                contacts.reverse(function (a, b) {\n                  a = a.address.toUpperCase();\n                  b = b.address.toUpperCase();\n                  return a < b ? -1 : a > b ? 1 : 0;\n                });\n                break;\n              }\n      default:\n    }\n    this.setState({ contacts: contacts });\n  };\n\n  render() {\n    return (\n      <div className=\"Main container\">\n        <Form className=\"card col-6\">\n          <h4>הרשמה לשירות</h4>\n          <Form.Group controlId=\"formBasicName\">\n            <Form.Label>שם</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"השם שלכם\"\n              required\n              name=\"name\"\n              onChange={this.setFormParams}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPhone\">\n            <Form.Label>טלפון</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"הטלפון שלכם \"\n              required\n              name=\"phone\"\n              onChange={this.setFormParams}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>מייל</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"כתובת המייל שלכם\"\n              name=\"mail\"\n              required\n              onChange={this.setFormParams}\n            />\n            <Form.Text className=\"text-muted\">לעולם לא נשתף אותה</Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicAddress\">\n            <Form.Label>כתובת</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"כתובת\"\n              required\n              name=\"address\"\n              onChange={this.setFormParams}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"button\" onClick={this.addContact}>\n            שליחה\n          </Button>\n        </Form>\n        <br />\n        <Table striped bordered hover className=\"col-6\">\n          <thead>\n            <tr>\n              <th onClick={() => this.sortBy(\"id\")}># </th>\n              <th onClick={() => this.sortBy(\"name\")}>שם</th>\n              <th onClick={() => this.sortBy(\"phone\")}>טלפון</th>\n              <th onClick={() => this.sortBy(\"mail\")}>מייל</th>\n              <th onClick={() => this.sortBy(\"address\")}>כתובת</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.contacts.map((c) => (\n              <tr key={c.id}>\n                <td>{c.id}</td>\n                <td>{c.name}</td>\n                <td>{c.mail}</td>\n                <td>{c.phone}</td>\n                <td>{c.address}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\n\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './main';\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Main />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}